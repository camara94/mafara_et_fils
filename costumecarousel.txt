import 'package:flutter/material.dart';
import 'package:mafara_et_fils/model/sliders.dart';
import 'package:mafara_et_fils/screens/menu/custom_navigation_drawer.dart';
import 'package:mafara_et_fils/services/database.dart';
import 'package:provider/provider.dart';
import 'dart:async';


class Home extends StatefulWidget {
  @override
  _HomePageState createState() => new _HomePageState();
}

class _HomePageState extends State<Home> {
  final DatabaseService _db = DatabaseService();
  int photoIndex = 0;
  List<String> photos = [
    'assets/slider0.jpg',
    'assets/slider1.jpg',
    'assets/slider2.jpg',
    'assets/slider3.jpg',
    'assets/shop3.jpg'
  ];

  void _previousImage() {
    setState(() {
      photoIndex = photoIndex < photos.length - 1 ? photoIndex + 1 : 0;
    });
  }

  void _nextImage() {
    setState(() {
      photoIndex = photoIndex > 0 ? photoIndex - 1 : 0;
    });
  }

  void _nextInfinite() {
    setState(() {
      if ( photoIndex < photos.length ){
         this._previousImage();
         print(this.photoIndex);
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    //Equivalent de setTimeout en JavaScript
    Timer(Duration(seconds: 5), () {
      setState(() {
         this._nextInfinite();
      });
    });

    return new Scaffold(
        body: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[
            Center(
              child: Stack(
                children: <Widget>[
                  Container(
                    decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(0.0),
                        image: DecorationImage(
                            image: AssetImage(photos[photoIndex]),
                            fit: BoxFit.cover)),
                    height: MediaQuery.of(context).size.width/2,
                    width: MediaQuery.of(context).size.width,
                  ),
                  Positioned(
                    top: 180.0,
                    left: 25.0,
                    right: 25.0,
                    child: SelectedPhoto(numberOfDots: photos.length, photoIndex: photoIndex),
                  )
                ],
              ),
            ),
            /*Row(
              mainAxisAlignment: MainAxisAlignment.center,            
              children: <Widget>[
                Container(width: MediaQuery.of(context).size.width,
                 child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                   children: [
                     RaisedButton(
                  child: Icon(Icons.fast_rewind),
                  onPressed: _nextImage,
                  elevation: 5.0,
                  color: Colors.white,
                ),
                SizedBox(width: 10.0),
                 Container(width: MediaQuery.of(context).size.width/2,),
                RaisedButton(
                  child: Icon(Icons.fast_forward),
                  onPressed: _previousImage,
                  elevation: 5.0,
                  color: Colors.white,
                )
                   ],
                 ),
                ),
                
              ],
            )*/
          ],
        ));
  }
}

class SelectedPhoto extends StatelessWidget {

  final int numberOfDots;
  final int photoIndex;

  SelectedPhoto({this.numberOfDots, this.photoIndex});

  Widget _inactivePhoto() {
    return new Container(
      child: new Padding(
        padding: const EdgeInsets.only(left: 3.0, right: 3.0),
        child: Container(
          height: 8.0,
          width: 8.0,
          decoration: BoxDecoration(
            color: Colors.grey,
            borderRadius: BorderRadius.circular(4.0)
          ),
        ),
      )
    );
  }

  Widget _activePhoto() {
    return Container(
      child: Padding(
        padding: EdgeInsets.only(left: 3.0, right: 3.0),
        child: Container(
          height: 10.0,
          width: 10.0,
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(5.0),
            boxShadow: [
              BoxShadow(
                color: Colors.grey,
                spreadRadius: 0.0,
                blurRadius: 2.0
              )
            ]
          ),
        ),
      ),
    );
  }

  List<Widget> _buildDots() {
    List<Widget> dots = [];

    for(int i = 0; i< numberOfDots; ++i) {
      dots.add(
        i == photoIndex ? _activePhoto(): _inactivePhoto()
      );
    }

    return dots;
  }


  @override
  Widget build(BuildContext context) {
    return new Center(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: _buildDots(),
      ),
    );
  }
}

